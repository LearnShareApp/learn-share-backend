basePath: /api
definitions:
  get_categories.category:
    properties:
      id:
        example: 1
        type: integer
      min_age:
        example: 12
        type: integer
      name:
        example: Programing
        type: string
    type: object
  get_categories.errorResponse:
    properties:
      error:
        type: string
    type: object
  get_categories.response:
    properties:
      categories:
        items:
          $ref: '#/definitions/get_categories.category'
        type: array
    type: object
  get_profile.errorResponse:
    properties:
      error:
        type: string
    type: object
  get_profile.response:
    properties:
      birthdate:
        example: "2002-09-09T10:10:10+09:00"
        type: string
      email:
        example: qwerty@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John
        type: string
      registration_date:
        example: "2022-09-09T10:10:10+09:00"
        type: string
      surname:
        example: Smith
        type: string
    type: object
  login.errorResponse:
    properties:
      error:
        type: string
    type: object
  login.request:
    properties:
      email:
        example: john@gmail.com
        type: string
      password:
        example: strongpass123
        type: string
    required:
    - email
    - password
    type: object
  login.response:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  registration.errorResponse:
    properties:
      error:
        type: string
    type: object
  registration.request:
    description: User registration request
    properties:
      birthdate:
        example: "2000-01-01T00:00:00Z"
        type: string
      email:
        example: john@gmail.com
        type: string
      name:
        example: John
        type: string
      password:
        example: strongpass123
        type: string
      surname:
        example: Smith
        type: string
    required:
    - birthdate
    - email
    - name
    - password
    - surname
    type: object
  registration.response:
    description: User registration response
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: ruslanrbb8@gmail.com
    name: Ruslan's Support
    url: https://t.me/Ruslan20007
  description: back-end part for mobile application.
  title: Learn-Share API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login Credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/login.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/login.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/login.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/login.errorResponse'
      summary: Login user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user (student) in the system
      parameters:
      - description: Registration Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/registration.request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/registration.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/registration.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/registration.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/registration.errorResponse'
      summary: Register new user
      tags:
      - auth
  /categories:
    get:
      description: Get list of all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/get_categories.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/get_categories.errorResponse'
      summary: Get categories
      tags:
      - categories
  /user/profile:
    get:
      description: 'Get info about user by jwt token (in Authorization enter: Bearer
        <your_jwt_token>)'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/get_profile.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/get_profile.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/get_profile.errorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - user
  /users/{id}/profile:
    get:
      description: Get info about user by id in route (/api/users/{id}/profile)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/get_profile.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/get_profile.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/get_profile.errorResponse'
      summary: Get user profile
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
